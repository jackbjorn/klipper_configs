#            _       _                 __
# _ __  _ __(_)_ __ | |_ ___ _ __ ___ / _| __ _
#| '_ \| '__| | '_ \| __/ _ \ '__/ __| |_ / _` |
#| |_) | |  | | | | | ||  __/ | | (__|  _| (_| |
#| .__/|_|  |_|_| |_|\__\___|_|(_)___|_|  \__, |
#|_|                                      |___/
# 
# ASCII art done using figlet on the CLI
# 
# This file contains common pin mappings for the BIGTREETECH SKR mini
# E3 v2.0. To use this config, the firmware should be compiled for the
# STM32F103 with a "28KiB bootloader" and USB communication. Also,
# select "Enable extra low-level configuration options" and configure
# "GPIO pins to set at micro-controller startup" to "!PA14".

# The "make flash" command does not work on the SKR mini E3. Instead,
# after running "make", copy the generated "out/klipper.bin" file to a
# file named "firmware.bin" on an SD card and then restart the SKR
# mini E3 with that SD card.

# See docs/Config_Reference.md for a description of parameters.

# Z-offset calibrate -> The CR10-S has been changed yet again
# Set the probe so that it is just less than parallel to the nozzle
# The z_offset is the distance between the nozzle and bed when the probe triggers. 
# The Klipper PROBE_CALIBRATE tool
# can be used to obtain this value - it will run an automatic probe to measure the probe's Z trigger position and 
# then start a manual probe to obtain the nozzle Z height. The probe z_offset will then be calculated from these 
# measurements.
# 
# Start by homing the printer (G28) and then move the head to a position near the center of the bed. Navigate to the 
# OctoPrint terminal tab and run the PROBE_CALIBRATE command to start the tool.

# 
# STEPPER_BUZZ STEPPER=stepper_y
# 

# https://www.klipper3d.org/Measuring_Resonances.html
# https://github.com/bigtreetech/BIGTREETECH-SKR-mini-E3/blob/master/hardware/BTT%20SKR%20MINI%20E3%20V2.0/Hardware/BTT%20SKR%20MINI%20E3%20V2.0-PIN.pdf
# https://www.youtube.com/watch?v=vduYl9Rw5iI
# https://www.reddit.com/r/3Dprinting/comments/hx6ab3/bed_leveling_bltouch_inductive_sensor/
# https://docs.mainsail.xyz/faq/moonraker_warnings/policykit

# SHAPER_CALIBRATE
# https://www.klipper3d.org/Measuring_Resonances.html#input-shaper-re-calibration
# https://www.klipper3d.org/Measuring_Resonances.html#bed-slinger-printers
# 
# https://github.com/Klipper3d/klipper/blob/master/docs/Measuring_Resonances.md
# https://github.com/Klipper3d/klipper/blob/master/docs/RPi_microcontroller.md
# $ ACCELEROMETER_QUERY CHIP=adxl345
# // adxl345 values (x, y, z): 764.918700, 10096.926840, 2371.247970
# $ MEASURE_AXES_NOISE
# // Axes noise for xy-axis accelerometer: 23.824341 (x), 23.302406 (y), 67.810562 (z)
# 
# TEST_RESONANCES AXIS=X
# TEST_RESONANCES AXIS=Y
# ~/klipper/scripts/calibrate_shaper.py /tmp/resonances_x_*.csv -o /tmp/shaper_calibrate_x.png
# ~/klipper/scripts/calibrate_shaper.py /tmp/resonances_y_*.csv -o /tmp/shaper_calibrate_y.png

# Calibrate your print:
# Flow rate - it will cause delamination, etc.
# https://3dprintbeginner.com/flow-rate-calibration/
# Extruder steps
# Califlower
# pressure advance
# input shaper

[skew_correction] 

[skew_correction my_skew_profile]
xy_skew = -0.00169033703945
xz_skew = 0.0
yz_skew = 0.0

[input_shaper]
shaper_freq_x: 36.0
shaper_type_x: ei
shaper_freq_y: 28.2
shaper_type_y: zv

[mcu rpi]
serial: /tmp/klipper_host_mcu

[adxl345 hotend]
cs_pin: rpi:None

[adxl345 bed]
cs_pin: rpi:None

[resonance_tester]
accel_chip_x: adxl345 hotend
accel_chip_y: adxl345 bed
probe_points:
    150, 150, 20  # an example
    
[mcu]
serial: /dev/serial/by-id/usb-Klipper_stm32f103xe_31FFD9054254393015521957-if00
restart_method=command

[printer]
kinematics: cartesian
max_velocity: 300
max_accel: 1500 #2400
max_accel_to_decel: 1500 #2400
max_z_velocity: 5
max_z_accel: 100
square_corner_velocity: 5.0

[stepper_x]
step_pin: PB13
dir_pin: !PB12
enable_pin: !PB14
microsteps: 16
# First determine the type of belt. Most printers use a 2mm belt pitch (that is, each tooth on the belt is 2mm apart). 
# Then count the number of teeth on the stepper motor pulley. The rotation_distance is then calculated as:
# rotation_distance = <belt_pitch> * <number_of_teeth_on_pulley>
# For example, if a printer has a 2mm belt and uses a pulley with 20 teeth, then the rotation distance is 40.
rotation_distance: 39.95 #(Was 40, califlower shows 99.71% of 39.884)
full_steps_per_rotation: 200
endstop_pin: ^PC0
position_endstop: -40
position_min: -40
position_max: 295
homing_speed: 50

[tmc2209 stepper_x]
uart_pin: PC11
tx_pin: PC10
uart_address: 0
run_current: 1.0605
hold_current: 0.6363
stealthchop_threshold: 999999

# # rotation_distance = <full_steps_per_rotation> * <microsteps> / <steps_per_mm>
# 40 = 200 * 16 / x
# 40 / 200 = 16 / x
# 40x = 200*16
# 40x = 3200
# x = 80 steps per mm

[stepper_y]
step_pin: PB10
dir_pin: !PB2
enable_pin: !PB11
microsteps: 16
rotation_distance: 39.81 #(Was 40, califlower shows 99.74% or 39.896)
full_steps_per_rotation: 200 # 200 full steps per rotation (360 divided by 1.8 is 200)
endstop_pin: ^PC1
position_endstop: -10
position_min: -10
position_max: 260
homing_speed: 50

[tmc2209 stepper_y]
uart_pin: PC11
tx_pin: PC10
uart_address: 2
# If the stepper motor is missing steps or you are experiencing layer shifts, 
# the stepper current needs to be increased. This will supply more torque to the motor 
# but also make it (and the driver) run hotter.
run_current: 1.8
hold_current: 1.0
stealthchop_threshold: 999999

# The "measure and trim" method is not accurate enough for those axes and will likely lead to a worse configuration. 
# Instead, if needed, those axes can be determined by measuring the belts, pulleys, and lead screw hardware.
# https://github.com/Klipper3d/klipper/blob/master/docs/Rotation_Distance.md#obtaining-rotation_distance-by-inspecting-the-hardware
# 
[stepper_z]
step_pin: PB0
dir_pin: PC5
enable_pin: !PB1
microsteps: 16
# For example, the common "T8 leadscrew" has a rotation distance of 8 (it has a pitch of 2mm and has 4 separate threads).
rotation_distance: 8 # https://github.com/Klipper3d/klipper/blob/master/docs/Rotation_Distance.md#axes-with-a-lead-screw
full_steps_per_rotation: 200
endstop_pin: probe:z_virtual_endstop # Z-Probe = PC14, GND, PA1, +5V, GND
# position_endstop: 0.0
position_max: 400
# https://www.klipper3d.org/Bed_Level.html#choose-the-appropriate-calibration-mechanism
position_min: -10 # During calibration it may be necessary to set the printer's Z position_min to a negative number
# Always perform the paper test when both nozzle and bed are at room temperature!
homing_speed: 50

[tmc2209 stepper_z]
uart_pin: PC11
tx_pin: PC10
uart_address: 1
run_current: 0.8 # 680 #580
hold_current: 0.6 #500
stealthchop_threshold: 999999

[extruder]
step_pin: PB3
dir_pin: PB4
enable_pin: !PD2
heater_pin: PC8
sensor_type: ATC Semitec 104NT-4-R025H42G
sensor_pin: PA0
microsteps: 16
# JDB - Calculating rotational distance - mark 100mm and then 150mm on a line
# Heat up the nozzle and issue a M83 for relative steps
# Now issue a G1 E100 F100 to slow feed 100mm. Measure what is left.
# I measured 46.68mm remaining from the 150mm, so when I extruded 100mm, I actually got
# 103.32mm extruded. Pretty close.
# estep calc: https://www.th3dstudio.com/estep-calculator/
# E-steps = (full steps per rotation x microsteps) / rotation_distance
# = (200 * 16) / 22
# Esteps = 145.454545454545455
# New estep: 140.78
# 
# New rotation distance = (200 * 16 ) / 140.78
# = 22.73050149168916
rotation_distance: 22.73050149168916
nozzle_diameter: 0.400
filament_diameter: 1.750
# Change to 50:17 because Bondtech
gear_ratio:3:1 # 50:17 # https://github.com/Klipper3d/klipper/blob/master/docs/Rotation_Distance.md#using-a-gear_ratio
max_extrude_cross_section: 50 # JDB hopefully this makes this problem go away. Crappy start gcode
# PID_CALIBRATE HEATER=extruder TARGET=215
control = pid
pid_kp = 34.083
pid_ki = 4.455
pid_kd = 65.183
min_temp: 0
max_temp: 300
min_extrude_temp: 0 # 180
max_extrude_only_distance: 500
# https://github.com/Klipper3d/klipper/blob/master/docs/Pressure_Advance.md
pressure_advance = 0.03425
pressure_advance_smooth_time = 0.04

[tmc2209 extruder]
uart_pin: PC11
tx_pin: PC10
uart_address: 3
run_current: 0.650
hold_current: 0.500
stealthchop_threshold: 999999

[input_shaper]
# X - Recommended shaper is mzv @ 46.2 Hz
# Recommended shaper is mzv @ 23.0 Hz
shaper_freq_x: 46.2
shaper_type_x: mzv
shaper_freq_y: 23.0
shaper_type_y: mzv

[heater_bed]
# PID_CALIBRATE HEATER=heater_bed TARGET=100
heater_pin: PC9
sensor_type: Generic 3950
sensor_pin: PC3
control = pid
pid_kp = 43.722
pid_ki = 0.349
pid_kd = 1370.688
min_temp: 0
max_temp: 130

# You will get M106 unknown if you dont have a fan section
[fan] # Part cooling fan
pin: PC7

[heater_fan heat_break_fan]
pin: PC6
max_power: 1.0
kick_start_time: 0.100
heater: extruder
heater_temp: 40.0

[probe]
# With the bed and hotend cold (for now), move the probe to the center of the bed and run PROBE_ACCURACY. 
# It will probe the bed 10 times in a row and output a standard deviation value at the end. 
# Make sure that the sensed distance is not trending (gradually decreasing or increasing over the 10 probes) 
# and that the standard deviation is less than 0.003mm.
# https://www.klipper3d.org/Bed_Level.html#the-paper-test
# Always perform the paper test when both nozzle and bed are at room temperature!
pin: ^!PC2
# x_offset -left +right of the nozzle
# y_offset -front +behind the nozzle
x_offset: 50.7 # The distance (in mm) between the probe and the nozzle along the x-axis. The default is 0.
y_offset: 8.5 # The distance (in mm) between the probe and the nozzle along the y-axis. The default is 0.
# The greater the positive number, the closer the nozzle is to the bed
# The distance (in mm) between the bed and the nozzle when the probe triggers. This parameter must be provided.
# The more positive the number, the lower you make the nozzel to the bed
# run PROBE_CALIBRATE
z_offset = 0.499
speed: 120 #15 #5.0
samples: 4 #3
samples_tolerance: 0.100
samples_tolerance_retries: 3
# PROBE_ACCURACY
# // probe accuracy results: maximum -4.400000, minimum -4.435000, range 0.035000, 
# // average -4.420250, median -4.421250, standard deviation 0.012321
# 
# Providing an accurate probe z_offset is critical to obtaining high quality prints. 
# The z_offset is the distance between the nozzle and bed when the probe triggers. 
# The Klipper PROBE_CALIBRATE tool can be used to obtain this value - it will run an automatic 
# probe to measure the probe's Z trigger position and then start a manual probe to obtain 
# the nozzle Z height. The probe z_offset will then be calculated from these measurements.

[safe_z_home]
home_xy_position: 150,150 
speed: 50
z_hop: 10                 
z_hop_speed: 10

[screws_tilt_adjust]
# https://www.klipper3d.org/Manual_Level.html
# https://www.youtube.com/watch?v=ZiYz7zBUrCc
horizontal_move_z: 10
speed:             120 # Y motor strains at 200
screw_thread:      CW-M3
screw1:            -15,15
screw1_name:       front left
screw2:            220,15
screw2_name:       front right
screw3:            220,255
screw3_name:       back right
screw4:            -15,255
screw4_name:       back left
#G1 X30 Y30 E0 Z10.0 F3000

#Error below is because of the Z stepper position_min
#Move out of range: -9.000 30.000 5.000 [0.000]
[bed_mesh]
speed: 200
horizontal_move_z: 5 #10
mesh_min: 20,10
mesh_max: 285,255 #take off 30mm for the probe distance from the nozzle
probe_count: 12,12
mesh_pps: 2,2 #3,3 # https://www.klipper3d.org/Bed_Mesh.html#mesh-interpolation
algorithm: bicubic
bicubic_tension: 0.2
move_check_distance: 5
split_delta_z: .025
fade_start: 1
fade_end: 20
#fade_end: 0.0 # Default is 0.0, which disables fade
#fade_target: 0
relative_reference_index = 72 #()(x points * y points) - 1) / 2

[bed_mesh default]
version = 1
points =
	  -0.084375, -0.118750, -0.136250, -0.137500, -0.129375, -0.131250, -0.120625, -0.103750, -0.111250, -0.115625, -0.113750, -0.153750
	  -0.126875, -0.122500, -0.112500, -0.126875, -0.111875, -0.111250, -0.105000, -0.089375, -0.093750, -0.099375, -0.101250, -0.147500
	  -0.113125, -0.114375, -0.106875, -0.103125, -0.091250, -0.080000, -0.088125, -0.073750, -0.062500, -0.068750, -0.081875, -0.145000
	  -0.076875, -0.073125, -0.060625, -0.058750, -0.058125, -0.056250, -0.053125, -0.045625, -0.048125, -0.058750, -0.065000, -0.118750
	  -0.042500, -0.053750, -0.027500, -0.033750, -0.034375, -0.031875, -0.025000, -0.013750, -0.020625, -0.025625, -0.040000, -0.108750
	  -0.016875, -0.024375, -0.018125, -0.010000, -0.009375, -0.006250, 0.009375, -0.011875, -0.015625, -0.026875, -0.041875, -0.099375
	  0.000000, -0.010625, 0.001875, -0.013750, -0.006250, -0.003750, 0.008125, -0.001875, -0.011875, -0.034375, -0.043750, -0.115000
	  -0.004375, -0.005000, 0.011875, -0.010625, -0.009375, -0.011250, -0.006875, -0.017500, -0.020000, -0.038125, -0.056250, -0.128750
	  -0.014375, -0.025000, -0.018750, -0.033750, -0.041250, -0.030625, -0.028125, -0.020625, -0.041875, -0.066875, -0.083125, -0.141250
	  -0.025625, -0.034375, -0.033750, -0.046875, -0.054375, -0.057500, -0.053125, -0.045000, -0.057500, -0.071250, -0.078125, -0.139375
	  -0.054375, -0.075000, -0.069375, -0.079375, -0.080000, -0.086250, -0.080000, -0.081250, -0.085000, -0.099375, -0.107500, -0.171250
	  -0.104375, -0.105625, -0.103750, -0.108750, -0.115625, -0.109375, -0.101250, -0.087500, -0.103750, -0.110000, -0.113750, -0.169375
tension = 0.2
min_x = 20.0
algo = bicubic
y_count = 12
mesh_y_pps = 2
min_y = 10.0
x_count = 12
max_y = 254.96
mesh_x_pps = 2
max_x = 284.99

[gcode_arcs]
resolution: 1.0

#[static_digital_output usb_pullup_enable]
#pins: !PA14

[output_pin BEEPER]
pin: PB5
pwm: True
#   A piezo beeper needs a PWM signal, a DC buzzer doesn't.
value: 0
#   Silent at power on, set to 1 if active low.
shutdown_value: 0
#   Disable at emergency shutdown (no PWM would be available anyway).
cycle_time: 0.001
#   Default PWM frequency : 0.001 = 1ms will give a tone of 1kHz
#   Although not pitch perfect.

[board_pins] # JDB you can confirm this with the pinout of the board, look for EXP1
aliases:
    EXP1_1=PB5,  EXP1_3=PA9,   EXP1_5=PA10, EXP1_7=PB8,  EXP1_9=<GND>,
    EXP1_2=PA15, EXP1_4=<RST>, EXP1_6=PB9,  EXP1_8=PB15, EXP1_10=<5V>,
# See the sample-lcd.cfg file for definitions of common LCD displays.

[temperature_sensor raspberry_pi]
sensor_type: temperature_host
min_temp: 10
max_temp: 100

[temperature_sensor mcu_temp]
sensor_type: temperature_mcu
min_temp: 0
max_temp: 100

# Disabling for now
# Read here:
# https://www.reddit.com/r/klippers/comments/p5z49o/klipper_bigtreetech_smart_filament_sensor_skr_e3/
#[duplicate_pin_override]
#pins: PA15
# 
[filament_motion_sensor btt_smartie]
detection_length: 7.0
extruder: extruder
switch_pin: !PC15
runout_gcode: FILAMENT_RUNOUT

[include fluidd.cfg]

[neopixel my_neopixel]
# https://marlinfw.org/docs/gcode/M150.html
pin:      PA8
#   The pin connected to the neopixel. This parameter must be
#   provided.
chain_count: 8
#   The number of Neopixel chips that are "daisy chained" to the
#   provided pin. The default is 1 (which indicates only a single
#   Neopixel is connected to the pin).
color_order: GRBW
#   Set the pixel order required by the LED hardware. Options are GRB,
#   RGB, GRBW, or RGBW. The default is GRB.
initial_RED: 0.0
initial_GREEN: 0.0
initial_BLUE: 0.0
initial_WHITE: 0.0
#   Sets the initial LED color of the Neopixel. Each value should be
#   between 0.0 and 1.0. The WHITE option is only available on RGBW
#   LEDs. The default for each color is 0.

[display]
lcd_type: st7920 # https://github.com/Klipper3d/klipper/blob/master/config/sample-lcd.cfg
cs_pin: PB8 # EXP1_7
sclk_pin: PB9
sid_pin: PB15
encoder_pins: ^PA10, ^PA9
click_pin: ^!PA15

[include macros.cfg]
[include menus.cfg]
