# Important info on macros and printer parameters
# https://www.klipper3d.org/G-Codes.html
# https://www.klipper3d.org/Status_Reference.html

[pause_resume]

[virtual_sdcard]
path: /home/pi/gcode_files

[display_status]

[respond]

[gcode_macro Present]
gcode:
  g1 x150 y10 z150 F4000

[idle_timeout]
gcode:
#   A list of G-Code commands to execute on an idle timeout. See
#   docs/Command_Templates.md for G-Code format. The default is to run
#   "TURN_OFF_HEATERS" and "M84".
  SET_LED LED=my_neopixel RED=0.0 GREEN=0.0 BLUE=0.0 WHITE=0.0
timeout: 600
#   Idle time (in seconds) to wait before running the above G-Code
#   commands. The default is 600 seconds.

[gcode_macro M205]
gcode:
  {% if 'X' in params %}
    SET_VELOCITY_LIMIT SQUARE_CORNER_VELOCITY={params.X}
  {% elif 'Y' in params %}
    SET_VELOCITY_LIMIT SQUARE_CORNER_VELOCITY={params.Y}
  {% endif %}

[gcode_macro PINK]
gcode:
  # Pink is 255,192,203 RGB
  # ((192 * 100) / 255) / 100 = 0.752 then round up or down = 0.75
  SET_LED LED=my_neopixel RED=1 GREEN=0.18 BLUE=0.7 WHITE=0.0

[gcode_macro ORANGE]
gcode:
  SET_LED LED=my_neopixel RED=1 GREEN=0.5 BLUE=0 WHITE=0.0

[gcode_macro YELLOW]
gcode:
  SET_LED LED=my_neopixel RED=1.0 GREEN=1.0 BLUE=0.0 WHITE=0.0

[gcode_macro BLUE]
gcode:
  SET_LED LED=my_neopixel RED=0.0 GREEN=0.0 BLUE=1.0 WHITE=0.0

[gcode_macro GREEN]
gcode:
  SET_LED LED=my_neopixel RED=0.0 GREEN=1.0 BLUE=0.0 WHITE=0.0

[gcode_macro RED]
gcode:
  SET_LED LED=my_neopixel RED=1.0 GREEN=0.0 BLUE=0.0 WHITE=0.0

[gcode_macro WHITE]
gcode:
  SET_LED LED=my_neopixel RED=0.0 GREEN=0.0 BLUE=0.0 WHITE=1.0

[gcode_macro BLACK]
gcode:
  SET_LED LED=my_neopixel RED=0.0 GREEN=0.0 BLUE=0.0 WHITE=0.0

#https://www.klipper3d.org/Bed_Mesh.html
#[gcode_macro G29]
#gcode:
#  G28
#  M117 Heating... 
#  SET_LED LED=my_neopixel RED=1.0 GREEN=0 BLUE=0 WHITE=0 # set led to red
#  M140 S70     # Set bed to 70 degrees
#  M190 S70     # wait until 70
#  M117 Probing the bed
#  SET_LED LED=my_neopixel RED=1.0 GREEN=0.62 BLUE=0 WHITE=0   # set LED to orange
#  BED_MESH_CALIBRATE PROFILE=default
#  BED_MESH_PROFILE SAVE=default
#  SAVE_CONFIG
#  SET_LED LED=my_neopixel RED=0 GREEN=0 BLUE=0 WHITE=0   # set LED off
#  M140 S0
#  M117 Probing done
#  G28

[gcode_macro FILAMENT_RUNOUT]
gcode:
  M117 Filament runout detected
  # M300 S1 P10
  M600
  # M300 S1 P10

[gcode_macro M300] # M300 - Play Tone
gcode:
  {% set S = params.S|default(1000)|int %}
  {% set P = params.P|default(100)|int %}
    SET_PIN PIN=BEEPER VALUE=0.5 CYCLE_TIME={ 1.0/S if S > 0 else 1 }
  G4 P{P}
    SET_PIN PIN=BEEPER VALUE=0
  
[gcode_macro M600] # M600 - Filament Change
gcode:
    {% set X = params.X|default(50)|float %}
    {% set Y = params.Y|default(0)|float %}
    {% set Z = params.Z|default(10)|float %}
    SAVE_GCODE_STATE NAME=M600_state
    PAUSE
    G91
    G1 E-.8 F2700
    G1 Z{Z}
    G90
    G1 X{X + 20} Y{Y + 20} F3000
    G91
    G1 E-50 F1000
    RESTORE_GCODE_STATE NAME=M600_state

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
# change this if you need more or less extrusion
variable_extrude: 1.0
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  ##### set park positon for x and y #####
  # default is your max posion from your printer.cfg
  {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - 2.0) %}
      {% set z_safe = 2.0 %}
  {% else %}
      {% set z_safe = max_z - act_z %}
  {% endif %}
  ##### end of definitions #####
  PAUSE_BASE
  G91
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G1 E-{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  {% if "xyz" in printer.toolhead.homed_axes %}
    G1 Z{z_safe} F900
    G90
    G1 X{x_park - 50} Y{y_park - 50} F6000
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %} 

[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  #### get VELOCITY parameter if specified ####
  {% if 'VELOCITY' in params|upper %}
    {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
  {%else %}
    {% set get_params = "" %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G91
    G1 E{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}  
  RESUME_BASE {get_params}

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
  {% set Y_MAX = printer.toolhead.axis_maximum.y|default(100)|float %}
  {% set Z_POS = printer.toolhead.position.z|float %}
  G1 X20 Y{Y_MAX - 50} Z{Z_POS + 20} F1000
  TURN_OFF_HEATERS
  CANCEL_PRINT_BASE
  M106 S0                                      
  M104 S0                                       
  M140 S0
  M84

# Replace the slicer's custom start and end g-code scripts with
# START_PRINT and END_PRINT.
[gcode_macro START_PRINT]
gcode:
  SET_LED LED=my_neopixel RED=1.0 GREEN=0 BLUE=0 WHITE=0
  BED_MESH_PROFILE LOAD=default # Load Auto Leveling
  SKEW_PROFILE LOAD=my_skew_profile

  {% if printer.homed_axes != 'XYZ' %}
		G28			#Home All Axes
	{% endif %}
  # Precondition extruder
  G92 E0

  G1 X7.1 Y20 Z0.28 F5000.0        # Move to start position
  G1 X7.1 Y200.0 Z0.28 F1500.0 E15 # Draw the first line
  G1 X7.8 Y200.0 Z0.28 F5000.0     # Move to side a little
  G1 X7.8 Y20 Z0.28 F1500.0 E30    # Draw the second line

  G92 E0
  # Hop the printhead            
  G1 Z2.0 F600        
  G1 Z0.2 F600        
  G1 Z2.0 F600

  SET_LED LED=my_neopixel RED=0 GREEN=0 BLUE=0 WHITE=1.0

[gcode_macro END_PRINT]
gcode:
  #Get Printer built volume dimensions
  {% set X_MAX = printer.toolhead.axis_maximum.x|default(100)|float %}
  {% set Y_MAX = printer.toolhead.axis_maximum.y|default(100)|float %}
  {% set Z_POS = printer.toolhead.position.z|float %}

  #Fix-up extruder
  G91                                            
  G1 E-2 F2700                                    
  G1 E-1.5 Z0.2 F2400                        
  G1 X5 Y5 F6000                               
  G1 Z10                                     
  G90                                        

  #Present print
  G1 X20 Y{Y_MAX - 50} Z{Z_POS + 10} F1000 # Send to the back left corner
  M106 S0                                      
  M104 S0                                       
  M140 S0                                 

  M84 X Y E # Disable Steppers
  SET_SKEW CLEAR=1
  SET_LED LED=my_neopixel RED=0 GREEN=1.0 BLUE=0 WHITE=0
        
[gcode_macro DUMP_VARS]
gcode:
   {% for name1 in printer %}
      {% for name2 in printer[name1] %}
        {% if (name1 != "configfile") and (name1 != "bed_mesh" and name2!="mesh_matrix") and (name1 != "mcu" and name2!="mcu_constants") and (name1 != "mcu" and name2!="last_stats") and (name2 != "color_data") and (andm1 != "gcode_macro") %}
            { action_respond_info("printer['%s'].%s = %s" % (name1, name2, printer[name1][name2])) }
        {% else %}
            { action_respond_info("printer['%s'].%s = %s" % (name1, name2, "...")) }
        {% endif %}
      {% endfor %}
   {% endfor %}
